"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" GENERAL
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype indent on
filetype off
filetype plugin on
let mapleader="," " Leader for Vim
set autowriteall " Autosave the file always
set background=light " Use light background of the colorscheme
set backspace=indent,eol,start " Allow using backspace to delete characters
set clipboard=unnamed " Share OS X and Vim clipboard
set colorcolumn=80 " Display vertical column at 80 characters
set completeopt=menu,menuone
set encoding=utf-8
set expandtab
set hlsearch " Highlight search matches
set ignorecase " Case-insensitive searching
set laststatus=2
set lazyredraw
set list listchars=tab:»·,trail:· " Display extra whitespace
set mouse=a "Enable mouse support
set nobackup " Don't make backups
set nocompatible
set nocursorcolumn
set nocursorline
set noswapfile " Don't use swap file
set number " Show line numbers
set numberwidth=5
set shiftwidth=2
set showcmd " Display incomplete commands
set showmatch " Higlight matching parenthesis
set showmode " Display the mode you're in
set smartcase " Use case-sensitive search if expression contains a capital letter
set splitbelow " Split window below
set splitright " Split window to the right
set tabstop=2
set ttyfast

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" MAPPINGS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Toggle NERDTree panel
map <silent> <leader>e :NERDTreeToggle<CR>
" Comment current line
map <silent> <leader>, <leader>c<space>
" Search using ag
nnoremap <leader>a :Grepper -tool grep -open -switch<cr>
" Remove highlighting on search results
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>
" Activate :FZF
map <C-P> :FZF<CR>
" Toggle TagBar
nnoremap <silent> <Leader>B :TagbarToggle<CR>

" Move to left split window.
nnoremap <A-D-Left> <C-w>h
" Move to split window below.
nnoremap <A-D-Down> <C-w>j
" Move to split window above.
nnoremap <A-D-Up> <C-w>k
" Move to right split window.
nnoremap <A-D-Right> <C-w>l

map <leader>- :split<CR>
map <leader><bar> :vsplit<CR>

" Pane switching
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" Map commands with capital letters for simplicity
:command! WQ wq
:command! Wq wq
:command! W w
:command! Q q

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set rtp+={{ vim_target_dir }}
call plug#begin('{{ vim_target_dir }}/plugged')

" General
Plug 'christoomey/vim-tmux-navigator'
Plug 'ervandew/supertab'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'majutsushi/tagbar'
Plug 'mhinz/vim-grepper'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-surround'

" Color scheme
Plug 'altercation/vim-colors-solarized'

" Filetype
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'ekalinin/Dockerfile.vim', { 'for' : 'Dockerfile'}
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'vim-ruby/vim-ruby', { 'for': 'ruby' }
Plug 'klen/python-mode', { 'for': 'python' }
Plug 'hashivim/vim-terraform', { 'for': 'terraform' }

" Add plugins to &runtimepath
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" PLUGINS - CONFIGURATION
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if filereadable(expand("{{ vim_target_dir }}/plugged/vim-colors-solarized/colors/solarized.vim"))
  colorscheme solarized
endif

" NERDTree
let g:NERDTreeQuitOnOpen = 0
let g:NERDTreeShowHidden = 1
let g:NERDTreeIgnore = ['\.DS_Store$']

" Misc
let g:SuperTabDefaultCompletionType = "context"
let g:tagbar_autoclose = 0
let g:vim_json_syntax_conceal = 0

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" AUTOCOMMANDS
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("autocmd")
  augroup filetypes
    autocmd!

    autocmd BufRead,BufNewFile *.go setlocal noexpandtab shiftwidth=4 tabstop=4
    autocmd BufRead,BufNewFile *.vim setlocal expandtab shiftwidth=2 tabstop=2
    autocmd BufRead,BufNewFile *.sh setlocal expandtab shiftwidth=2 tabstop=2
    autocmd BufRead,BufNewFile *.txt setlocal noexpandtab shiftwidth=4 tabstop=4
    autocmd BufRead,BufNewFile *.md setlocal noexpandtab shiftwidth=4 tabstop=4
    autocmd BufRead,BufNewFile *.html setlocal noexpandtab shiftwidth=4 tabstop=4
    autocmd BufRead,BufNewFile *.json setlocal filetype=json

    autocmd FileType gitcommit setlocal textwidth=72

    " Strip trailing white spaces when opening a file or creating a new file
    autocmd BufWritePre * :call <SID>StripTrailingWhitespaces()
  augroup END
else
  set autoindent
endif

function! <SID>StripTrailingWhitespaces()
  " Preparation: save last search, and cursor position.
  let _s=@/
  let l = line(".")
  let c = col(".")
  " Do the business:
  %s/\s\+$//e
  " Clean up: restore previous search history and cursor position
  let @/=_s
  call cursor(l, c)
endfunction
